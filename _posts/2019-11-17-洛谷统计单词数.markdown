---
tags:
- 编程及算法
---

# 题目

## 题目描述

一般的文本编辑器都有查找单词的功能，该功能可以快速定位特定单词在文章中的位置，有的还能统计出特定单词在文章中出现的次数。<br>

现在，请你编程实现这一功能，具体要求是：给定一个单词，请你输出它在给定的文章中出现的次数和第一次出现的位置。注意：匹配单词时，不区分大小写，但要求完全匹配，即给定单词必须与文章中的某一独立单词在不区分大小写的情况下完全相同（参见样例1 ），如果给定单词仅是文章中某一单词的一部分则不算匹配（参见样例2 ）。

## 输入格式

共2行。<br>

第1行为一个字符串，其中只含字母，表示给定单词；<br>

第2行为一个字符串，其中只可能包含字母和空格，表示给定的文章。<br>

## 输出格式

一行，如果在文章中找到给定单词则输出两个整数，两个整数之间用一个空格隔开，分别是单词在文章中出现的次数和第一次出现的位置（即在文章中第一次出现时，单词首字母在文章中的位置，位置从000 开始）；如果单词在文章中没有出现，则直接输出一个整数−1-1−1。

## 输入输出样例

```
输入 #1								               输出 #1

To
to be or not to be is a question	                  2 0


输入 #2												输出 #2

to													
Did the Ottoman Empire lose its power at that time     -1

```

## 说明/提示

数据范围<br>

1≤1≤ 1≤单词长度≤10≤10≤10。<br>

1≤1≤ 1≤文章长度≤1,000,000≤1,000,000≤1,000,000。<br>

# 题解

```c
#include <stdio.h>
#include<math.h>
#include <ctype.h>
#include<string.h>
void strlower (char *a) {
    for(int i = 0; a[i]; i ++ ) {
        if(isupper(a[i])) a[i] = tolower(a[i]);
	}
}
int main(void){
	char word[11],article[1000001],*p,*q;
	int first,l,num=0,flag=1;
	gets(word);
	gets(article);
	strlower(word);//全部转换成小写字母
    strlower(article);
    l=strlen(word);
	p=article;
	for(;q=strstr(p,word);){
		if(q!=NULL&&(q==article||*(q-1)==' ')&&(*(q+l)=='\0'||*(q+l)==' ')){
			num++;
			if(flag==1){
				flag=0;
				first=q-article;
			}
		}
		p = q + l;
	}
	if(flag==0){
		printf("%d %d",num,first);
	}
	else printf("-1");
	return 0;
}
```

# 反思总结

判断单词一共出现了几次这个很简单，不过我没有想到字符串函数，对于用flag判断是否为第一次出现的方法不熟悉，导致第一次写出的代码循环套循环，且在判断第一次出现位置时极其不方便。<br>

在题解帮助下，先是搞定了如何判断第一次出现

```
if(flag==1)/*判断是否为第一次出现*/{
				flag=0;
				first=q-article;
```

这一步思路是真的好<br>

然后查了下strstr函数的用法<br>

该库函数包含在<string.h>头文件中，函数原型：extern char \*strstr(char \*str1, const char \*str2);
使用方法 char \*strstr(char \*str1, char \*str2);   意义为 判断str2是否为str1的字串，若是则返回str2在str1中首次出现的指针位置，若不是返回NULL；