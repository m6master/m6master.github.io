---
tags:
- 编程及算法
---

# 题目

在日常生活中，通过年、月、日这三个要素可以表示出一个唯一确定的日期。

牛牛习惯用888位数字表示一个日期，其中，前444位代表年份，接下来222位代表月 份，最后222位代表日期。显然：一个日期只有一种表示方法，而两个不同的日期的表 示方法不会相同。

牛牛认为，一个日期是回文的，当且仅当表示这个日期的8位数字是回文的。现 在，牛牛想知道：在他指定的两个日期之间包含这两个日期本身），有多少个真实存 在的日期是回文的。

一个888位数字是回文的，当且仅当对于所有的i(1≤i≤8)i ( 1 \le i \le 8)i(1≤i≤8)从左向右数的第i个 数字和第9−i9-i9−i个数字（即从右向左数的第iii个数字）是相同的。

例如：

•对于2016年11月19日，用888位数字201611192016111920161119表示，它不是回文的。

•对于2010年1月2日，用888位数字201001022010010220100102表示，它是回文的。

•对于2010年10月2日，用888位数字201010022010100220101002表示，它不是回文的。

每一年中都有121212个月份：

其中，1,3,5,7,8,10,121,3,5,7,8,10,121,3,5,7,8,10,12月每个月有313131天；4,6,9,114,6,9,114,6,9,11月每个月有303030天；而对于222月，闰年时有292929天，平年时有282828天。

一个年份是闰年当且仅当它满足下列两种情况其中的一种：

1.这个年份是444的整数倍，但不是100100100的整数倍；

2.这个年份是400400400的整数倍。

例如：

•以下几个年份都是闰年：2000,2012,20162000,2012,20162000,2012,2016。

•以下几个年份是平年：1900,2011,20141900,2011,20141900,2011,2014。

输入格式

两行，每行包括一个888位数字。

第一行表示牛牛指定的起始日期。

第二行表示牛牛指定的终止日期。

保证date_i date\_i date_i和都是真实存在的日期，且年份部分一定为444位数字，且首位数字不为000。

保证date1 date 1 date1 —定不晚于date2 date 2 date2。
输出格式

一个整数，表示在date1date1date1和date2date2date2之间，有多少个日期是回文的。

## 输入输出样例

输入 

`
20110101
20111231
`

输出 

`
3
`

# 代码

先遍历月数天数，回文构造出年数判断是否在范围内即可。闰年不需要特殊判断，因为0229回文日期一定是92200229.

```c
#include<cstdio>
#include<stdio.h>

int main(void){
    int n,m,a;
    int p = 0;
    int yue[12]={31,28,31,30,31,30,31,31,30,31,30,31};
    scanf("%d %d",&n,&m);
    for(int i=1;i<=12;i++){
        for(int j=1;j<=yue[i-1];j++){
            a=(j%10)*1000+(j/10)*100+(i%10)*10+i/10;
            if(a<(n/10000)||a>(m/10000)){
                continue;
            }
            p++;
        }
    }
    if(n<=92200229&&m>=92200229){
        p++;
    }
    printf("%d",p);
    return 0;
}
```
